# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Functional and quality tests for Python

env: 
  DU: ${{ secrets.DU }}
  DP: ${{secrets.DP}}
  DB: ${{secrets.DB}}
  H: ${{secrets.H}}
  P: ${{secrets.P}}
  JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
  HASH_MIN_LEN: ${{secrets.HASH_MIN_LEN}}
  HASH_SALT: ${{secrets.HASH_SALT}}
  AZURE_BLOB_ACCOUNT_URL: ${{secrets.AZURE_BLOB_ACCOUNT_URL}}
  IMAGE_CONTAINER_NAME: ${{secrets.IMAGE_CONTAINER_NAME}}
  AZURE_BLOB_CONNECTION_STRING: ${{secrets.AZURE_BLOB_CONNECTION_STRING}}
  AZURE_IMAGE_URL_BASE: ${{secrets.AZURE_IMAGE_URL_BASE}}
  
  
on:
  pull_request:
    branches: [ "alpha", "dev"]

permissions:
  contents: read

jobs:
  build:
    name: Functionality code test

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
        
    - uses: actions/cache@v3
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements_ubuntu.txt
    - name: Test with pytest
      run: | 
        pytest --cov=app --cov=api --cov-report=html --cov-fail-under=85
  quality:
      name: Quality code test

      runs-on: windows-latest

      steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install -r requirements_ubuntu.txt
      - name: Lint with pylint
        run: |
          python linting.py app

