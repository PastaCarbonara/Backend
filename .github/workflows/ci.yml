# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Functional and quality tests for Python

env: 
  DU: ${{ secrets.DU }}
  DP: ${{secrets.DP}}
  DB: ${{secrets.DB}}
  H: ${{secrets.H}}
  P: ${{secrets.P}}
  JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
  HASH_MIN_LEN: ${{secrets.HASH_MIN_LEN}}
  HASH_SALT: ${{secrets.HASH_SALT}}
  AZURE_BLOB_ACCOUNT_URL: ${{secrets.AZURE_BLOB_ACCOUNT_URL}}
  IMAGE_CONTAINER_NAME: ${{secrets.IMAGE_CONTAINER_NAME}}
  AZURE_BLOB_CONNECTION_STRING: ${{secrets.AZURE_BLOB_CONNECTION_STRING}}
  AZURE_IMAGE_URL_BASE: ${{secrets.AZURE_IMAGE_URL_BASE}}
  
  
on:
  pull_request:
    branches: [ "alpha", "dev"]

permissions:
  contents: read

jobs:
  build:
    name: Functionality code test

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build Docker image
      run: docker build -t munchie-image .
    - name: Test with pytest
      run: | 
        docker run \
        -e DU="${DU}" \
        -e DP="${DP}" \
        -e DB="${DB}" \
        -e H="${H}" \
        -e P="${P}" \
        -e JWT_SECRET_KEY="${JWT_SECRET_KEY}" \
        -e HASH_MIN_LEN="${HASH_MIN_LEN}" \
        -e HASH_SALT="${HASH_SALT}" \
        -e AZURE_BLOB_ACCOUNT_URL="${AZURE_BLOB_ACCOUNT_URL}" \
        -e IMAGE_CONTAINER_NAME="${IMAGE_CONTAINER_NAME}" \
        -e AZURE_BLOB_CONNECTION_STRING="${AZURE_BLOB_CONNECTION_STRING}" \
        -e AZURE_IMAGE_URL_BASE="${AZURE_IMAGE_URL_BASE}" \
        munchie-image pytest --cov=app --cov=api --cov-report=html --cov-fail-under=85

  quality:
      name: Quality code test

      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        run: docker build -t munchie-image .
      - name: Lint with pylint
        run: |
          docker run munchie-image python linting.py app

