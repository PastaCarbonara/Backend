"""SQLALECHMY 2.0 :o

Revision ID: 7049e1ffe5f6
Revises: 7f2b4a90519a
Create Date: 2023-03-10 15:25:31.589883

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7049e1ffe5f6'
down_revision = '7f2b4a90519a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if op.get_bind().dialect.name.startswith('sqlite'):
        with op.batch_alter_table('recipe') as batch_op:
            batch_op.alter_column('description', existing_type=sa.TEXT(), nullable=False)
            batch_op.alter_column('creator_id', existing_type=sa.INTEGER(), nullable=False)

        with op.batch_alter_table('recipe_ingredient') as batch_op:
            batch_op.alter_column('amount', existing_type=sa.Float(precision=53), nullable=False)
            batch_op.alter_column('unit_id', existing_type=sa.INTEGER(), nullable=False)
            batch_op.create_foreign_key('recipe_ingredient_unit_id_fkey', 'unit', ['unit_id'], ['id'])
            batch_op.create_foreign_key('recipe_ingredient_ingredient_id_fkey', 'recipe', ['ingredient_id'], ['id'])
            batch_op.create_foreign_key('recipe_ingredient_recipe_id_fkey', 'recipe', ['recipe_id'], ['id'])

        with op.batch_alter_table('recipe_judgement') as batch_op:
            batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=False))
            batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=False))
            batch_op.alter_column('like', existing_type=sa.BOOLEAN(), nullable=False)
            batch_op.create_foreign_key('recipe_judgement_recipe_id_fkey', 'recipe', ['recipe_id'], ['id'])
            batch_op.create_foreign_key('recipe_judgement_user_id_fkey', 'user', ['user_id'], ['id'])

        with op.batch_alter_table('recipe_tag') as batch_op:
            batch_op.create_foreign_key('recipe_tag_recipe_id_fkey', 'recipe', ['recipe_id'], ['id'])
            batch_op.create_foreign_key('recipe_tag_tag_id_fkey', 'tag', ['tag_id'], ['id'])

        with op.batch_alter_table('swipe') as batch_op:
            batch_op.alter_column('swipe_session_id', existing_type=sa.INTEGER(), nullable=False)
            batch_op.alter_column('user_id', existing_type=sa.INTEGER(), nullable=False)
            batch_op.alter_column('recipe_id', existing_type=sa.INTEGER(), nullable=False)

        with op.batch_alter_table('swipe_session') as batch_op:
            batch_op.alter_column('status', existing_type=sa.String(), nullable=False)
            batch_op.alter_column('user_id', existing_type=sa.INTEGER(), nullable=False)

        with op.batch_alter_table('user_profile') as batch_op:
            batch_op.alter_column('is_admin', existing_type=sa.BOOLEAN(), nullable=False)
        
    else:
        op.alter_column('recipe', 'description',
                existing_type=sa.TEXT(),
                nullable=False)
        op.alter_column('recipe', 'creator_id',
                existing_type=sa.INTEGER(),
                nullable=False)
        op.alter_column('recipe_ingredient', 'amount',
                existing_type=sa.DOUBLE_PRECISION(precision=53),
                nullable=False)
        op.alter_column('recipe_ingredient', 'unit_id',
                existing_type=sa.INTEGER(),
                nullable=False)
        op.drop_constraint('recipe_ingredient_recipe_id_fkey', 'recipe_ingredient', type_='foreignkey')
        op.drop_constraint('recipe_ingredient_ingredient_id_fkey', 'recipe_ingredient', type_='foreignkey')
        op.drop_constraint('recipe_ingredient_unit_id_fkey', 'recipe_ingredient', type_='foreignkey')
        op.create_foreign_key(None, 'recipe_ingredient', 'unit', ['unit_id'], ['id'])
        op.create_foreign_key(None, 'recipe_ingredient', 'recipe', ['ingredient_id'], ['id'])
        op.create_foreign_key(None, 'recipe_ingredient', 'recipe', ['recipe_id'], ['id'])
        op.add_column('recipe_judgement', sa.Column('created_at', sa.DateTime(), nullable=False))
        op.add_column('recipe_judgement', sa.Column('updated_at', sa.DateTime(), nullable=False))
        op.alter_column('recipe_judgement', 'like',
                existing_type=sa.BOOLEAN(),
                nullable=False)
        op.drop_constraint('recipe_judgement_user_id_fkey', 'recipe_judgement', type_='foreignkey')
        op.drop_constraint('recipe_judgement_recipe_id_fkey', 'recipe_judgement', type_='foreignkey')
        op.create_foreign_key(None, 'recipe_judgement', 'recipe', ['recipe_id'], ['id'])
        op.create_foreign_key(None, 'recipe_judgement', 'user', ['user_id'], ['id'])
        op.drop_constraint('recipe_tag_recipe_id_fkey', 'recipe_tag', type_='foreignkey')
        op.drop_constraint('recipe_tag_tag_id_fkey', 'recipe_tag', type_='foreignkey')
        op.create_foreign_key(None, 'recipe_tag', 'recipe', ['recipe_id'], ['id'])
        op.create_foreign_key(None, 'recipe_tag', 'tag', ['tag_id'], ['id'])
        op.alter_column('swipe', 'swipe_session_id',
                existing_type=sa.INTEGER(),
                nullable=False)
        op.alter_column('swipe', 'user_id',
                existing_type=sa.INTEGER(),
                nullable=False)
        op.alter_column('swipe', 'recipe_id',
                existing_type=sa.INTEGER(),
                nullable=False)
        op.alter_column('swipe_session', 'status',
                existing_type=postgresql.ENUM('Gepauzeerd', 'Gestopt', 'Is bezig', 'Voltooid', name='swipesessionenum'),
                nullable=False)
        op.alter_column('swipe_session', 'user_id',
                existing_type=sa.INTEGER(),
                nullable=False)
        op.alter_column('user_profile', 'is_admin',
                existing_type=sa.BOOLEAN(),
                nullable=False)
        
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_profile', 'is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('swipe_session', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('swipe_session', 'status',
               existing_type=postgresql.ENUM('Gepauzeerd', 'Gestopt', 'Is bezig', 'Voltooid', name='swipesessionenum'),
               nullable=True)
    op.alter_column('swipe', 'recipe_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('swipe', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('swipe', 'swipe_session_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'recipe_tag', type_='foreignkey')
    op.drop_constraint(None, 'recipe_tag', type_='foreignkey')
    op.create_foreign_key('recipe_tag_tag_id_fkey', 'recipe_tag', 'tag', ['tag_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('recipe_tag_recipe_id_fkey', 'recipe_tag', 'recipe', ['recipe_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'recipe_judgement', type_='foreignkey')
    op.drop_constraint(None, 'recipe_judgement', type_='foreignkey')
    op.create_foreign_key('recipe_judgement_recipe_id_fkey', 'recipe_judgement', 'recipe', ['recipe_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('recipe_judgement_user_id_fkey', 'recipe_judgement', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('recipe_judgement', 'like',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_column('recipe_judgement', 'updated_at')
    op.drop_column('recipe_judgement', 'created_at')
    op.drop_constraint(None, 'recipe_ingredient', type_='foreignkey')
    op.drop_constraint(None, 'recipe_ingredient', type_='foreignkey')
    op.drop_constraint(None, 'recipe_ingredient', type_='foreignkey')
    op.create_foreign_key('recipe_ingredient_unit_id_fkey', 'recipe_ingredient', 'unit', ['unit_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('recipe_ingredient_ingredient_id_fkey', 'recipe_ingredient', 'ingredient', ['ingredient_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('recipe_ingredient_recipe_id_fkey', 'recipe_ingredient', 'recipe', ['recipe_id'], ['id'], ondelete='CASCADE')
    op.alter_column('recipe_ingredient', 'unit_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('recipe_ingredient', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('recipe', 'creator_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('recipe', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    # ### end Alembic commands ###
